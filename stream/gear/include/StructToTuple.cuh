#include <tuple>
#include <type_traits>
#include <cassert>

namespace details {
  /// Implementation of the detection idiom (negative case).
  template <typename AlwaysVoid, template <typename...> class Op, typename... Args>
  struct detector {
    constexpr static bool value = false;
  };

  /// Implementation of the detection idiom (positive case).
  template <template <typename...> class Op, typename... Args>
  struct detector<std::void_t<Op<Args...>>, Op, Args...> {
    constexpr static bool value = true;
  };
} // namespace details

template <template <class...> class Op, class... Args>
using is_detected_st = details::detector<void, Op, Args...>;

template <template <class...> class Op, class... Args>
inline constexpr bool is_detected_st_v = is_detected_st<Op, Args...>::value;

template<typename T, typename ... Args>
using braced_init = decltype(T{std::declval<Args>()...});

// This is not even my final form
template<typename ... Args>
inline constexpr bool is_braces_constructible = is_detected_st_v<braced_init, Args...>;

struct any_type {
  template<class T>
  constexpr operator T(); // non explicit
};

// Avoid wrong warnings from nvcc:
// Warning #940-D: missing return statement at end of non-void function "struct_to_tuple(T &&)""
#ifdef __CUDACC__
#pragma push
#pragma diag_suppress = 940
#endif

/**
 * @brief Struct to tuple conversion using structured binding.
 */
template<class T>
auto struct_to_tuple(T&& object) noexcept
{
  using type = std::decay_t<T>;
  if constexpr (is_braces_constructible<
                  type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type,
                  any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32, p33, p34, p35, p36, p37, p38, p39] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24,
      p25,
      p26,
      p27,
      p28,
      p29,
      p30,
      p31,
      p32,
      p33,
      p34,
      p35,
      p36,
      p37,
      p38,
      p39);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32, p33, p34, p35, p36, p37, p38] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24,
      p25,
      p26,
      p27,
      p28,
      p29,
      p30,
      p31,
      p32,
      p33,
      p34,
      p35,
      p36,
      p37,
      p38);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32, p33, p34, p35, p36, p37] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24,
      p25,
      p26,
      p27,
      p28,
      p29,
      p30,
      p31,
      p32,
      p33,
      p34,
      p35,
      p36,
      p37);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32, p33, p34, p35, p36] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24,
      p25,
      p26,
      p27,
      p28,
      p29,
      p30,
      p31,
      p32,
      p33,
      p34,
      p35,
      p36);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32, p33, p34, p35] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24,
      p25,
      p26,
      p27,
      p28,
      p29,
      p30,
      p31,
      p32,
      p33,
      p34,
      p35);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32, p33, p34] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24,
      p25,
      p26,
      p27,
      p28,
      p29,
      p30,
      p31,
      p32,
      p33,
      p34);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32, p33] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24,
      p25,
      p26,
      p27,
      p28,
      p29,
      p30,
      p31,
      p32,
      p33);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24,
      p25,
      p26,
      p27,
      p28,
      p29,
      p30,
      p31,
      p32);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24,
      p25,
      p26,
      p27,
      p28,
      p29,
      p30,
      p31);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24,
      p25,
      p26,
      p27,
      p28,
      p29,
      p30);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24,
      p25,
      p26,
      p27,
      p28,
      p29);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24,
      p25,
      p26,
      p27,
      p28);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24,
      p25,
      p26,
      p27);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24,
      p25,
      p26);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24,
      p25);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24] =
      object;
    return std::make_tuple(
      p0,
      p1,
      p2,
      p3,
      p4,
      p5,
      p6,
      p7,
      p8,
      p9,
      p10,
      p11,
      p12,
      p13,
      p14,
      p15,
      p16,
      p17,
      p18,
      p19,
      p20,
      p21,
      p22,
      p23,
      p24);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23] =
      object;
    return std::make_tuple(
      p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22] =
      object;
    return std::make_tuple(
      p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21] =
      object;
    return std::make_tuple(
      p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20] = object;
    return std::make_tuple(
      p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19] = object;
    return std::make_tuple(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18] = object;
    return std::make_tuple(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17] = object;
    return std::make_tuple(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16] = object;
    return std::make_tuple(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15] = object;
    return std::make_tuple(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14] = object;
    return std::make_tuple(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13] = object;
    return std::make_tuple(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12] = object;
    return std::make_tuple(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11] = object;
    return std::make_tuple(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10] = object;
    return std::make_tuple(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9] = object;
    return std::make_tuple(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
  }
  else if constexpr (is_braces_constructible<
                       type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type,
                       any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7, p8] = object;
    return std::make_tuple(p0, p1, p2, p3, p4, p5, p6, p7, p8);
  }
  else if constexpr (
    is_braces_constructible<type, any_type, any_type, any_type, any_type, any_type, any_type, any_type, any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6, p7] = object;
    return std::make_tuple(p0, p1, p2, p3, p4, p5, p6, p7);
  }
  else if constexpr (
    is_braces_constructible<type, any_type, any_type, any_type, any_type, any_type, any_type, any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5, p6] = object;
    return std::make_tuple(p0, p1, p2, p3, p4, p5, p6);
  }
  else if constexpr (is_braces_constructible<type, any_type, any_type, any_type, any_type, any_type, any_type>) {
    auto&& [p0, p1, p2, p3, p4, p5] = object;
    return std::make_tuple(p0, p1, p2, p3, p4, p5);
  }
  else if constexpr (is_braces_constructible<type, any_type, any_type, any_type, any_type, any_type>) {
    auto&& [p0, p1, p2, p3, p4] = object;
    return std::make_tuple(p0, p1, p2, p3, p4);
  }
  else if constexpr (is_braces_constructible<type, any_type, any_type, any_type, any_type>) {
    auto&& [p0, p1, p2, p3] = object;
    return std::make_tuple(p0, p1, p2, p3);
  }
  else if constexpr (is_braces_constructible<type, any_type, any_type, any_type>) {
    auto&& [p0, p1, p2] = object;
    return std::make_tuple(p0, p1, p2);
  }
  else if constexpr (is_braces_constructible<type, any_type, any_type>) {
    auto&& [p0, p1] = object;
    return std::make_tuple(p0, p1);
  }
  else if constexpr (is_braces_constructible<type, any_type>) {
    auto&& [p0] = object;
    return std::make_tuple(p0);
  }
  else {
    return std::make_tuple();
  }
}

#ifdef __CUDACC__
#pragma pop
#endif
