<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC '-//QM/2.3/Extension//EN'  'http://www.codesourcery.com/qm/dtds/2.3/-//qm/2.3/extension//en.dtd'>
<!--
    (c) Copyright 2000-2018 CERN for the benefit of the LHCb Collaboration

    This software is distributed under the terms of the GNU General Public
    Licence version 3 (GPL Version 3), copied verbatim in the file "COPYING".

    In applying this licence, CERN does not waive the privileges and immunities
    granted to it by virtue of its status as an Intergovernmental Organization
    or submit itself to any jurisdiction.
-->
<!--
#######################################################
# SUMMARY OF THIS TEST
# ...................
# Author: Roel Aaij
# Purpose: Verify that raw banks are dumped
#######################################################
-->
<extension class="GaudiTest.GaudiExeTest" kind="test">
  <argument name="program"><text>gaudirun.py</text></argument>
  <argument name="args"><set>
    <text>../../options/dump_mc.py</text>
    <text>../options/upgrade-minbias-ldst.py</text>
  </set></argument>
  <arguement name="timeout"><integer>600</integer></arguement>
  <argument name="validator"><text>
test_name = "dumpers.dump"

ref_sizes = {}
with open('../refs/dump_mc.ref') as ref:
    for line in ref:
        f, s = line.strip().split()
        ref_sizes[f] = int(s)

missing = []
bad_size = []
for f, s in ref_sizes.items():
    if not os.path.exists(f):
        missing.append(f)
    else:
        size = os.stat(f).st_size
        if size != s:
            bad_size.append((f, size, s))

result_str = ''
if not missing and not bad_size:
    result_str += 'Files and sizes match\n'
if missing:
    result_str += 'Missing:\n\t' + '\n\t'.join(missing) + '\n'
    causes.append("missing files")
if bad_size:
    pat = "%s is %d bytes instead of %d"
    causes.append("file size mismatch(es)")
    result_str += ('Wrong size:\n\t'
                   + '\n\t'.join([pat % e for e in bad_size]) + '\n')

result["validator.output"] = result.Quote(result_str)

countErrorLines({"FATAL":0,"ERROR":0,"WARNING":0})

</text></argument>
</extension>
