###############################################################################
# (c) Copyright 2018-2020 CERN for the benefit of the LHCb Collaboration      #
###############################################################################

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  TARGET_BRANCH: master

  ALLEN_DATA: "/scratch/allen_data"
  LCG_VERSION: "LCG_99"

  PROFILE_DEVICE: "geforcertx3090"
  RUN_THROUGHPUT_OPTIONS_CUDAPROF: "-n 500 -m 500 -r 100"
  RUN_THROUGHPUT_OPTIONS_CUDA: "-n 500 -m 500 -r 1000"
  RUN_THROUGHPUT_OPTIONS_HIP: "-n 5000 -m 5000 -r 1000"
  RUN_THROUGHPUT_OPTIONS_CPU: "-n 100 -m 100 -r 200"

  OVERRIDE_CUDA_ARCH_FLAG: "-gencode=arch=compute_70,code=sm_70 -gencode=arch=compute_75,code=sm_75 -gencode=arch=compute_86,code=sm_86"

stages:
  - check            # Ensures the CI environment is valid
  - build docker
  - build
  - run              # Build and run (throughput, efficiency, etc...)
  - test             # Runs various tests of the software
  - publish          # Publishes the results of the tests and runs in channels and grafana

  - manual trigger   # Blocks full pipeline from running in merge requests
  - build full
  - run full         # Build and run (full child pipelines)
  - test full        # Tests (full)
  - publish full     # Publishing (full)

check-env:
  stage: check
  except:
    - /.*/@lhcb/Allen
  script:
    - |
      echo "The Allen CI depends on custom GitLab runners and therefore tests"
      echo "running on forks will fail. Please create a branch in the main"
      echo "repository at https://gitlab.cern.ch/lhcb/Allen/"
    - exit 1


.active_branches: &active_branches
  only:
    refs:
      - master
      - web
      - schedules
      - merge_requests


check-copyright:
  <<: *active_branches

  stage: check
  image: gitlab-registry.cern.ch/ci-tools/ci-worker:cc7
  script:
    - curl -o lb-check-copyright "https://gitlab.cern.ch/lhcb-core/LbDevTools/-/raw/master/LbDevTools/SourceTools.py?inline=False"
    - python lb-check-copyright --license=Apache-2.0 origin/${TARGET_BRANCH}
  needs: []

check-formatting:
  <<: *active_branches
  stage: check
  image: gitlab-registry.cern.ch/lhcb-docker/style-checker
  script:
    - |
      if [ ! -e .clang-format ] ; then
        curl -o .clang-format "https://gitlab.cern.ch/lhcb-parallelization/Allen/raw/master/.clang-format?inline=false"
        echo '.clang-format' >> .gitignore
        git add .gitignore
      fi

    - curl -o lb-format "https://gitlab.cern.ch/lhcb-core/LbDevTools/raw/master/LbDevTools/SourceTools.py?inline=false"

    - python lb-format --format-patch apply-formatting.patch origin/master
  artifacts:
    paths:
      - apply-formatting.patch
    when: on_failure
    expire_in: 1 week
  needs: []


docker_image:build:
  stage: build docker
  only:
    refs:
      - master
      - web
      - schedules
  tags:
    - docker-image-build
  script: "echo 'Building Allen dev docker image"
  variables:
    TO: $CI_REGISTRY_IMAGE:latest
    GIT_SUBMODULE_STRATEGY: recursive
  allow_failure: true
  needs: []

include: "scripts/ci/config/main.yaml"
