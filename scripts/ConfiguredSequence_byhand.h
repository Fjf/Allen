#pragma once

#include <tuple>
#include <array>

// Forward declare the algorithms that we are interested in
namespace host_init_event_list {
  struct host_init_event_list_t;
}
namespace host_data_provider {
  struct host_data_provider_t;
}

// Parameters are declared as a struct that inherits from either host or device datatype
// This is required to indicate where the memory manager needs to store them
struct initialize_event_lists__host_event_list_output_t : host_datatype {};
struct initialize_event_lists__dev_event_list_output_t : device_datatype {};
struct host_scifi_banks__host_raw_banks_t : host_datatype {};
struct host_scifi_banks__host_raw_offsets_t : host_datatype {};
struct host_scifi_banks__host_raw_bank_version_t : host_datatype {};

// Configured arguments and configured sequence arguments are as before
using configured_arguments_t = std::tuple<
  initialize_event_lists__host_event_list_output_t,
  initialize_event_lists__dev_event_list_output_t,
  host_scifi_banks__host_raw_banks_t,
  host_scifi_banks__host_raw_offsets_t,
  host_scifi_banks__host_raw_bank_version_t>;

using configured_sequence_arguments_t = std::tuple<
  std::tuple<initialize_event_lists__host_event_list_output_t, initialize_event_lists__dev_event_list_output_t>,
  std::tuple<host_scifi_banks__host_raw_banks_t, host_scifi_banks__host_raw_offsets_t, host_scifi_banks__host_raw_bank_version_t>>;

// In deps and out deps need to be generated by the code generation
using in_deps_t = std::tuple<
  std::tuple<initialize_event_lists__host_event_list_output_t, initialize_event_lists__dev_event_list_output_t>,
  std::tuple<host_scifi_banks__host_raw_banks_t, host_scifi_banks__host_raw_offsets_t, host_scifi_banks__host_raw_bank_version_t>>;

using out_deps_t = std::tuple<
  std::tuple<>,
  std::tuple<initialize_event_lists__host_event_list_output_t, initialize_event_lists__dev_event_list_output_t>>;

// List of algorithms that are instantiated with their names
auto instantiate_configured_algorithms() {
  return std::array{
    Allen::instantiate_algorithm<host_init_event_list::host_init_event_list_t>("initialize_event_lists"),
    Allen::instantiate_algorithm<host_data_provider::host_data_provider_t>("host_scifi_banks")
  };
}

// List of argument names (as before)
template<typename T>
void populate_sequence_argument_names(T& argument_manager) {
  argument_manager.template set_name<initialize_event_lists__host_event_list_output_t>("initialize_event_lists__host_event_list_output_t");
  argument_manager.template set_name<initialize_event_lists__dev_event_list_output_t>("initialize_event_lists__dev_event_list_output_t");
  argument_manager.template set_name<host_scifi_banks__host_raw_banks_t>("host_scifi_banks__host_raw_banks_t");
  argument_manager.template set_name<host_scifi_banks__host_raw_offsets_t>("host_scifi_banks__host_raw_offsets_t");
  argument_manager.template set_name<host_scifi_banks__host_raw_bank_version_t>("host_scifi_banks__host_raw_bank_version_t");
}
