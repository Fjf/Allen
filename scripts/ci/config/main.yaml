###############################################################################
# (c) Copyright 2018-2020 CERN for the benefit of the LHCb Collaboration      #
###############################################################################

# Entire workflow is defined here

include: "scripts/ci/config/common.yaml"

# builds + runs tests

build:
  extends: 
    - .build_job
    - .default_rules
    - .build_job_minimal_matrix
  stage: build

.run_job:
  extends: .run_jobs_minimal
  stage: run


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Configuration of jobs for each device                     #
# All devices to run in the minimal pipeline should be      #
# included here                                             #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

geforcertx3090:
  extends:
    - .geforcertx3090
    - .run_job

geforcertx2080ti:
  extends:
    - .geforcertx2080ti
    - .run_job
geforcertx2080ti-run-changes:
  extends:
    - .geforcertx2080ti
    - .run_toggle_run_changes
  stage: run

# a6000: # (disabled)
#   extends:
#     - .a6000
#     - .run_job

a5000:
  extends:
    - .a5000
    - .run_job

# mi100: # (disabled)
#   extends:
#     - .mi100
#     - .run_job

epyc7502:
  extends:
    - .epyc7502
    - .run_job
epyc7502-run-changes:
  extends:
    - .epyc7502
    - .run_toggle_run_changes
  stage: run
  
.device-jobs:
  dependencies:
    - epyc7502
    # - mi100
    # - a6000
    - a5000
    - geforcertx2080ti
    - geforcertx3090


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# test and publish stages for the minimal pipeline          #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

physics-efficiency:
  stage: test
  extends: 
    - .test_physics_efficiency
    - .default_rules_always_run
    - .device-jobs


run-changes:
  stage: test
  extends: 
    - .test_run_changes
    - .default_rules_always_run
  dependencies:
    - epyc7502-run-changes
    - geforcertx2080ti-run-changes


throughput:
  extends: 
    - .publish_test_throughput
    - .default_rules_always_run
  stage: test
  variables:
    PUBLISH_ARTIFACT_NAME: "test_throughput"
    TEST_NAME: "test_throughput"
  
  artifacts:
    name: "$PUBLISH_ARTIFACT_NAME"
    paths:
      - devices_throughputs_*.csv
      - test_throughput_details/*.txt
      - test_throughput_details/*.csv
    expire_in: 1 month
    when: always


pub-throughput:
  stage: publish
  extends: 
    - .publish_test_throughput
    - .default_rules_always_run
  variables:
    PUBLISH_ARTIFACT_NAME: "test_throughput"
    TEST_NAME: "publish_throughput"
    REFERENCE_JOB: "throughput"

  needs: [throughput]

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# manual trigger job for the full pipeline                  #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


# Blocks the full pipeline from being triggered automatically
# in Merge Requests
# Does not block for master, web, schedules
full-pipeline:
  variables:
    GIT_STRATEGY: none
  stage: "manual trigger"
  script:
    - exit
  rules:
    - if: '$CI_PROJECT_ROOT_NAMESPACE != "lhcb"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: manual
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "master"'
    # - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH != "master"'
    #   when: manual
    - when: never
  needs: []


# separate build jobs for CPU, CUDA, HIP targets

.full-build:
  needs: [full-pipeline]
  stage: "build full"
  extends: 
    - .default_rules
    - .build_job
    - .build_job_additional_matrix
  timeout: 1h 30m

CPU:
  extends: .full-build
  variables:
    LCG_QUALIFIER: "cpu"

CUDA:
  extends: .full-build
  variables:
    LCG_QUALIFIER: cuda11_4

HIP:
  extends: .full-build
  variables:
    LCG_QUALIFIER: hip5



# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Configuration of jobs for each device                     #
# All devices to run in the full pipeline should be         #
# included here                                             #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# N.B. if needs: refers to more than 50 jobs and throws an error, try using
# dependencies: instead.

.cpu_run_job:
  dependencies: [CPU, build]
  variables:
    LCG_QUALIFIER: "cpu"

.cuda_run_job:
  dependencies: [CUDA, build]
  variables:
    LCG_QUALIFIER: cuda11_4

.hip_run_job:
  dependencies: [HIP, build]
  variables:
    LCG_QUALIFIER: hip5


# CPU
epyc7502-full:
  extends:
    - .epyc7502
    - .run_jobs_full
    - .cpu_run_job
epyc7502-full-run-changes:
  extends:
    - .epyc7502
    - .run_toggle_run_changes
    - .default_rules_always_run
    - .cpu_run_job
  stage: "run full"


# GPU / CUDA
geforcertx3090-full:
  extends:
    - .geforcertx3090
    - .run_jobs_full
    - .cuda_run_job


geforcertx2080ti-full-run-changes:
  extends:
    - .geforcertx2080ti
    - .run_toggle_run_changes
    - .cuda_run_job
    - .default_rules_always_run
  stage: "run full"
geforcertx2080ti-full:
  extends:
    - .geforcertx2080ti
    - .run_jobs_full
    - .cuda_run_job


# a6000-full:
#   extends:
#     - .a6000
#     - .run_jobs_full
#     - .cuda_run_job


a5000-full:
  extends:
    - .a5000
    - .run_jobs_full
    - .cuda_run_job


# HIP

# N.B. HIP run tests are disabled

# mi100-full:
#   extends:
#     - .mi100
#     - .run_jobs_full
#     - .hip_run_job


# add any jobs listed above to this list
# (stops build artifacts being downloaded to full test and publish jobs)
# full-run-changes should be added to the needs: list in run-changes-full
.depend_full_run_jobs:

  # N.B. dependencies: is used instead of needs:, as the needs: job limit
  # is 50. See https://docs.gitlab.com/ee/ci/yaml/#changing-the-needs-job-limit
  dependencies:
    # CPU
    - epyc7502-full

    # HIP (disabled)
    # - mi100-full

    # CUDA 
    - geforcertx3090-full
    - geforcertx2080ti-full
    # - a6000-full (disabled)
    - a5000-full


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# test and publish jobs for full pipeline

physics-efficiency-full:
  stage: test full
  extends: 
    - .test_physics_efficiency
    - .default_rules_always_run
    - .depend_full_run_jobs


run-changes-full:
  stage: test full
  extends: 
    - .test_run_changes
    - .default_rules_always_run
  dependencies:
    # add run changes jobs here
    - epyc7502-full-run-changes
    - geforcertx2080ti-full-run-changes


throughput-full:
  extends: 
    - .publish_test_throughput
    - .default_rules_always_run
    - .depend_full_run_jobs

  stage: test full

  variables:
    PUBLISH_ARTIFACT_NAME: "test_throughput_full"
    TEST_NAME: "test_throughput"

  artifacts:
    name: "$PUBLISH_ARTIFACT_NAME"
    paths:
      - devices_throughputs_*.csv
      - test_throughput_details/*.txt
      - test_throughput_details/*.csv
    expire_in: 1 month
    when: always


pub-throughput-full:
  extends: 
    - .publish_test_throughput
    - .default_rules_always_run

  variables:
    TEST_NAME: "publish_throughput"
    REFERENCE_JOB: "throughput-full"

  needs: [throughput-full]

  stage: publish full
